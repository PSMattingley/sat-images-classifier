# -*- coding: utf-8 -*-
"""Sat-Images.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U4osKRy0dUz8IqwDygEEkvRe-5-k1mVS
"""

!pip install fastai --upgrade

import fastai 
print(fastai.__version__)

from fastai.vision.widgets import *
from fastai.vision.all import *

from pathlib import Path
image_types = 'clear','cloudy','auto-reject'
path = Path('drive/My Drive/sat-image-test-data')
if not path.exists():
    path.mkdir()
    for o in image_types:
        dest = (path/o)
        dest.mkdir(exist_ok=True)
        #results = search_images_bing(key, f'{o} bear')
        #download_images(dest, urls=results.attrgot('content_url'))

fns = get_image_files(path)
fns

failed.map(Path.unlink);

images = DataBlock(
    blocks=(ImageBlock, CategoryBlock), 
    get_items=get_image_files, 
    splitter=RandomSplitter(valid_pct=0.2, seed=42),
    get_y=parent_label,
    item_tfms=Resize(256))

dls = images.dataloaders(path, batch_size=16)

dls.valid.show_batch(max_n=8, nrows=2)

images = images.new(
    item_tfms=RandomResizedCrop(200, min_scale=0.5),
    batch_tfms=aug_transforms())
dls = images.dataloaders(path, batch_size=16)

learn = cnn_learner(dls, resnet18, metrics=error_rate)
learn.fine_tune(8)

interp = ClassificationInterpretation.from_learner(learn)
interp.plot_confusion_matrix()

interp.plot_top_losses(5, nrows=1)

cleaner = ImageClassifierCleaner(learn)
cleaner

learn.export()

path = Path()
path.ls(file_exts='.pkl')

learn_inf = load_learner(path/'export.pkl')

learn_inf.predict('/content/96_0e0f_2020-09-21.jpeg')

learn_inf.dls.vocab

btn_upload = widgets.FileUpload()
btn_upload

btn_run = widgets.Button(description='Classify')
btn_run

lbl_pred = widgets.Label()

def on_click_classify(change):
    img = PILImage.create(btn_upload.data[-1])
    out_pl.clear_output()
    with out_pl: display(img.to_thumb(128,128))
    pred,pred_idx,probs = learn_inf.predict(img)
    lbl_pred.value = f'Prediction: {pred}; Probability: {probs[pred_idx]:.04f}'

btn_run.on_click(on_click_classify)

VBox([widgets.Label('Is your image clear!'), 
      btn_upload, btn_run, out_pl, lbl_pred])